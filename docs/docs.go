// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/questions": {
            "get": {
                "description": "Retrieve questions with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Get questions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by ISO language code (e.g., en, de)",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by question type (truth/dare)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter by multiple tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "If true, all specified tags must match",
                        "name": "matchAllTags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Question"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Retrieve all available tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get all tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Question": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID is the unique identifier for the question",
                    "type": "integer"
                },
                "language": {
                    "description": "Language is the ISO language code (e.g., \"en\", \"de\")",
                    "type": "string"
                },
                "tags": {
                    "description": "Tags is an array of associated tag names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "task": {
                    "description": "Task contains the actual question or dare text",
                    "type": "string"
                },
                "type": {
                    "description": "Type must be either \"truth\" or \"dare\"",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Truth or Dare API",
	Description:      "A REST API for managing truth or dare questions in a MySQL database",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
